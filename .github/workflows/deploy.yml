name: DEPLOY (release/* push)

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: prod-deploy
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # (옵션) prod yml을 시크릿에서 주입하고 싶다면 활성화
      # - name: Push application-prod.yml from secret
      #   run: |
      #     mkdir -p ./src/main/resources
      #     echo "${{ secrets.PROD_YML }}" > ./src/main/resources/application-prod.yml

      - name: Build (skip tests if needed)
        run: ./gradlew clean bootJar -x test

      # JAR을 EC2로 업로드 (항상 /home/ubuntu/dplay/app.jar 로)
      - name: Upload jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/dplay/app.jar"
          strip_components: 2

      # Blue/Green 배포 + 헬스체크 + 스위치 + 최종 확인
      - name: Blue-Green deploy & switch
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail

            # 현재 upstream 포트 읽고 반대 색 결정
            CURRENT_PORT=$(grep -o '808[12]' /home/ubuntu/dplay/nginx/upstream.conf || true)
            if [ "$CURRENT_PORT" = "8081" ]; then
              NEXT=green
            else
              NEXT=blue
            fi
            echo "Next color: $NEXT"

            # 후보 컨테이너 기동 + 헬스체크 (2분 대기)
            /home/ubuntu/dplay/scripts/deploy_candidate.sh "$NEXT"

            # 정상이라면 트래픽 스위치
            /home/ubuntu/dplay/scripts/switch.sh "$NEXT"

            # 최종 스모크 테스트
            curl -fsS http://127.0.0.1/api/actuator/health | grep '"status":"UP"'

      - name: Done
        run: echo "✅ Deployed ${GITHUB_SHA} to EC2 via Blue-Green"