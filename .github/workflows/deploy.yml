name: DEPLOY (release/* push)

on:
  push:
    branches:
      - 'release/**'
      - 'release'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: prod-deploy
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      # JDK 버전은 런타임(Temurin 21-jre)과 맞추는 걸 권장
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build (skip tests if needed)
        run: ./gradlew clean bootJar -x test

      # 빌드 산출물 경로를 명확히 하나로 잡아둡니다
      - name: Find built jar
        id: jar
        run: |
          set -e
          JAR_PATH=$(ls build/libs/*SNAPSHOT.jar 2>/dev/null || ls build/libs/*.jar | head -n1)
          echo "jar=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "Using JAR: $JAR_PATH"

      # JAR → EC2 전송 (바로 app.jar로 복사 + 덮어쓰기 허용)
      - name: Upload jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: ${{ steps.jar.outputs.jar }}
          target: /home/ubuntu/dplay/app.jar
          overwrite: true
          strip_components: 2

      # Blue/Green 배포 + 스위치
      - name: Blue-Green deploy & switch
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail

            # 현재/대기 슬롯 계산(서버의 헬퍼 스크립트 사용) 
            eval "$(/home/ubuntu/dplay/scripts/current_and_idle.sh)"
            echo "Current=$current, Idle=$idle"

            # 대기 슬롯에 새 버전 기동 + 헬스 체크
            /home/ubuntu/dplay/scripts/deploy_candidate.sh "$idle"

            # 정상 기동이면 Nginx 트래픽 전환
            /home/ubuntu/dplay/scripts/switch.sh "$idle"

            # (선택) 이전 슬롯 컨테이너 정리
            if [ "$current" = "blue" ]; then
              docker rm -f dplay-container-blue || true
            else
              docker rm -f dplay-container-green || true
            fi

            # 최종 확인(Nginx 경유)
            curl -fsS http://127.0.0.1/api/actuator/health | grep -q '"status":"UP"'
            echo "✅ deployment finished"